1. Program to extract the specific number of bits


#include<stdio.h>
int bitExtracted(int number, int k, int p)
{
  return(((1<<k) - 1) & (number >>(p - 1)));
}
int main()
{
 int number, k, p;
 printf("enter the number\n");
 scanf("%d",&number);
 printf("enter k\n");
 scanf("%d" &k);
 printf("enter p\n");
 scanf("%d", &p);
 printf("The extracted number is %d", bitExtracted(number, k, p));
 return 0;
}



2.Program to convert decimal to binary using bit wise operator

#include<stdio.h>
#define INT_SIZE sizeof(int) * 8 /* size of int in bits */
int main()
{
 int num, index, i;
 int bin[INT_SIZE];
 scanf("%d", &num);
 index = INT_SIZE -1;
  
 while(index >=0)
{
 bin[index] = num & 1;
 index--;
 num>>=1;
}
 
printf("Converted binary: ");
for(i=0; i<INT_SIZE; i++)
{
 printf("%d", bin[i]);
}
 return 0;
}


3. Program to find the number of setbit

#include<stdio.h>
unsigned int countSetBits(unsigned int n)
{
 unsigned int count = 0;
 while (n){
      count += n & 1;
      n >>=1;
}
 return count;
}
int main()
{
 int n;
 scanf("%d", &n);
 printf("%d", countSetBits(i));
 return 0;
}


4. Program XOR

#include <stdio.h>
int main() {
    int a = 12, b = 25;
    printf("Output = %d", a^b);
    return 0;
}

5. Macro for little endian and Big Endian

#include<stdio.h>
int main()
{
   int val = 0x11223344;
   int converted =0; 
   printf("Value before conversion = 0x%x\n", val);
   convertd |=((0x000000ff & value)<<24);
   convertd |=((0x000000ff & value)<<8);
   convertd |=((0x000000ff & value)>>8);
   convertd |=((0x000000ff & value)>>24);
    
   printf("Value before conversion = 0x%x\n", converted);
   return 0;
   
   }
   
 
 
